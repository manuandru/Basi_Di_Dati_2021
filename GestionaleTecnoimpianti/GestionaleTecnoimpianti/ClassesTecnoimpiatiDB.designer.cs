#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GestionaleTecnoimpianti
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TecnoimpiantiDB")]
	public partial class ClassesTecnoimpiatiDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definizioni metodo Extensibility
    partial void OnCreated();
    partial void InsertCLIENTI(CLIENTI instance);
    partial void UpdateCLIENTI(CLIENTI instance);
    partial void DeleteCLIENTI(CLIENTI instance);
    partial void InsertTURNI_LAVORATIVI(TURNI_LAVORATIVI instance);
    partial void UpdateTURNI_LAVORATIVI(TURNI_LAVORATIVI instance);
    partial void DeleteTURNI_LAVORATIVI(TURNI_LAVORATIVI instance);
    partial void InsertDETTAGLI_MATERIALI(DETTAGLI_MATERIALI instance);
    partial void UpdateDETTAGLI_MATERIALI(DETTAGLI_MATERIALI instance);
    partial void DeleteDETTAGLI_MATERIALI(DETTAGLI_MATERIALI instance);
    partial void InsertELETTRICISTI(ELETTRICISTI instance);
    partial void UpdateELETTRICISTI(ELETTRICISTI instance);
    partial void DeleteELETTRICISTI(ELETTRICISTI instance);
    partial void InsertELETTRICISTI_CON_RUOLI(ELETTRICISTI_CON_RUOLI instance);
    partial void UpdateELETTRICISTI_CON_RUOLI(ELETTRICISTI_CON_RUOLI instance);
    partial void DeleteELETTRICISTI_CON_RUOLI(ELETTRICISTI_CON_RUOLI instance);
    partial void InsertFORNITORI(FORNITORI instance);
    partial void UpdateFORNITORI(FORNITORI instance);
    partial void DeleteFORNITORI(FORNITORI instance);
    partial void InsertFURGONI(FURGONI instance);
    partial void UpdateFURGONI(FURGONI instance);
    partial void DeleteFURGONI(FURGONI instance);
    partial void InsertIMPIANTI_ELETTRICI(IMPIANTI_ELETTRICI instance);
    partial void UpdateIMPIANTI_ELETTRICI(IMPIANTI_ELETTRICI instance);
    partial void DeleteIMPIANTI_ELETTRICI(IMPIANTI_ELETTRICI instance);
    partial void InsertLAVORI(LAVORI instance);
    partial void UpdateLAVORI(LAVORI instance);
    partial void DeleteLAVORI(LAVORI instance);
    partial void InsertMATERIALI(MATERIALI instance);
    partial void UpdateMATERIALI(MATERIALI instance);
    partial void DeleteMATERIALI(MATERIALI instance);
    partial void InsertMATERIALI_IN_PREVENTIVI(MATERIALI_IN_PREVENTIVI instance);
    partial void UpdateMATERIALI_IN_PREVENTIVI(MATERIALI_IN_PREVENTIVI instance);
    partial void DeleteMATERIALI_IN_PREVENTIVI(MATERIALI_IN_PREVENTIVI instance);
    partial void InsertPREVENTIVI(PREVENTIVI instance);
    partial void UpdatePREVENTIVI(PREVENTIVI instance);
    partial void DeletePREVENTIVI(PREVENTIVI instance);
    partial void InsertRUOLI(RUOLI instance);
    partial void UpdateRUOLI(RUOLI instance);
    partial void DeleteRUOLI(RUOLI instance);
    partial void InsertTIPOLOGIE(TIPOLOGIE instance);
    partial void UpdateTIPOLOGIE(TIPOLOGIE instance);
    partial void DeleteTIPOLOGIE(TIPOLOGIE instance);
    #endregion
		
		public ClassesTecnoimpiatiDBDataContext() : 
				base(global::GestionaleTecnoimpianti.Properties.Settings.Default.TecnoimpiantiDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ClassesTecnoimpiatiDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ClassesTecnoimpiatiDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ClassesTecnoimpiatiDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ClassesTecnoimpiatiDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CLIENTI> CLIENTI
		{
			get
			{
				return this.GetTable<CLIENTI>();
			}
		}
		
		public System.Data.Linq.Table<TURNI_LAVORATIVI> TURNI_LAVORATIVI
		{
			get
			{
				return this.GetTable<TURNI_LAVORATIVI>();
			}
		}
		
		public System.Data.Linq.Table<DETTAGLI_MATERIALI> DETTAGLI_MATERIALI
		{
			get
			{
				return this.GetTable<DETTAGLI_MATERIALI>();
			}
		}
		
		public System.Data.Linq.Table<ELETTRICISTI> ELETTRICISTI
		{
			get
			{
				return this.GetTable<ELETTRICISTI>();
			}
		}
		
		public System.Data.Linq.Table<ELETTRICISTI_CON_RUOLI> ELETTRICISTI_CON_RUOLI
		{
			get
			{
				return this.GetTable<ELETTRICISTI_CON_RUOLI>();
			}
		}
		
		public System.Data.Linq.Table<FORNITORI> FORNITORI
		{
			get
			{
				return this.GetTable<FORNITORI>();
			}
		}
		
		public System.Data.Linq.Table<FURGONI> FURGONI
		{
			get
			{
				return this.GetTable<FURGONI>();
			}
		}
		
		public System.Data.Linq.Table<IMPIANTI_ELETTRICI> IMPIANTI_ELETTRICI
		{
			get
			{
				return this.GetTable<IMPIANTI_ELETTRICI>();
			}
		}
		
		public System.Data.Linq.Table<LAVORI> LAVORI
		{
			get
			{
				return this.GetTable<LAVORI>();
			}
		}
		
		public System.Data.Linq.Table<MATERIALI> MATERIALI
		{
			get
			{
				return this.GetTable<MATERIALI>();
			}
		}
		
		public System.Data.Linq.Table<MATERIALI_IN_PREVENTIVI> MATERIALI_IN_PREVENTIVI
		{
			get
			{
				return this.GetTable<MATERIALI_IN_PREVENTIVI>();
			}
		}
		
		public System.Data.Linq.Table<PREVENTIVI> PREVENTIVI
		{
			get
			{
				return this.GetTable<PREVENTIVI>();
			}
		}
		
		public System.Data.Linq.Table<RUOLI> RUOLI
		{
			get
			{
				return this.GetTable<RUOLI>();
			}
		}
		
		public System.Data.Linq.Table<TIPOLOGIE> TIPOLOGIE
		{
			get
			{
				return this.GetTable<TIPOLOGIE>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CLIENTI")]
	public partial class CLIENTI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CodCliente;
		
		private string _Telefono;
		
		private string _CodiceFiscale;
		
		private string _Nome;
		
		private string _Cognome;
		
		private string _PartitaIVA;
		
		private string _Denominazione;
		
		private EntitySet<IMPIANTI_ELETTRICI> _IMPIANTI_ELETTRICI;
		
		private EntitySet<PREVENTIVI> _PREVENTIVI;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodClienteChanging(int value);
    partial void OnCodClienteChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnCodiceFiscaleChanging(string value);
    partial void OnCodiceFiscaleChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnCognomeChanging(string value);
    partial void OnCognomeChanged();
    partial void OnPartitaIVAChanging(string value);
    partial void OnPartitaIVAChanged();
    partial void OnDenominazioneChanging(string value);
    partial void OnDenominazioneChanged();
    #endregion
		
		public CLIENTI()
		{
			this._IMPIANTI_ELETTRICI = new EntitySet<IMPIANTI_ELETTRICI>(new Action<IMPIANTI_ELETTRICI>(this.attach_IMPIANTI_ELETTRICI), new Action<IMPIANTI_ELETTRICI>(this.detach_IMPIANTI_ELETTRICI));
			this._PREVENTIVI = new EntitySet<PREVENTIVI>(new Action<PREVENTIVI>(this.attach_PREVENTIVI), new Action<PREVENTIVI>(this.detach_PREVENTIVI));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodCliente", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CodCliente
		{
			get
			{
				return this._CodCliente;
			}
			set
			{
				if ((this._CodCliente != value))
				{
					this.OnCodClienteChanging(value);
					this.SendPropertyChanging();
					this._CodCliente = value;
					this.SendPropertyChanged("CodCliente");
					this.OnCodClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceFiscale", DbType="NChar(16)")]
		public string CodiceFiscale
		{
			get
			{
				return this._CodiceFiscale;
			}
			set
			{
				if ((this._CodiceFiscale != value))
				{
					this.OnCodiceFiscaleChanging(value);
					this.SendPropertyChanging();
					this._CodiceFiscale = value;
					this.SendPropertyChanged("CodiceFiscale");
					this.OnCodiceFiscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(32)")]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cognome", DbType="VarChar(32)")]
		public string Cognome
		{
			get
			{
				return this._Cognome;
			}
			set
			{
				if ((this._Cognome != value))
				{
					this.OnCognomeChanging(value);
					this.SendPropertyChanging();
					this._Cognome = value;
					this.SendPropertyChanged("Cognome");
					this.OnCognomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartitaIVA", DbType="NChar(11)")]
		public string PartitaIVA
		{
			get
			{
				return this._PartitaIVA;
			}
			set
			{
				if ((this._PartitaIVA != value))
				{
					this.OnPartitaIVAChanging(value);
					this.SendPropertyChanging();
					this._PartitaIVA = value;
					this.SendPropertyChanged("PartitaIVA");
					this.OnPartitaIVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Denominazione", DbType="VarChar(50)")]
		public string Denominazione
		{
			get
			{
				return this._Denominazione;
			}
			set
			{
				if ((this._Denominazione != value))
				{
					this.OnDenominazioneChanging(value);
					this.SendPropertyChanging();
					this._Denominazione = value;
					this.SendPropertyChanged("Denominazione");
					this.OnDenominazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENTI_IMPIANTI_ELETTRICI", Storage="_IMPIANTI_ELETTRICI", ThisKey="CodCliente", OtherKey="CodCliente")]
		public EntitySet<IMPIANTI_ELETTRICI> IMPIANTI_ELETTRICI
		{
			get
			{
				return this._IMPIANTI_ELETTRICI;
			}
			set
			{
				this._IMPIANTI_ELETTRICI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENTI_PREVENTIVI", Storage="_PREVENTIVI", ThisKey="CodCliente", OtherKey="CodCliente")]
		public EntitySet<PREVENTIVI> PREVENTIVI
		{
			get
			{
				return this._PREVENTIVI;
			}
			set
			{
				this._PREVENTIVI.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_IMPIANTI_ELETTRICI(IMPIANTI_ELETTRICI entity)
		{
			this.SendPropertyChanging();
			entity.CLIENTI = this;
		}
		
		private void detach_IMPIANTI_ELETTRICI(IMPIANTI_ELETTRICI entity)
		{
			this.SendPropertyChanging();
			entity.CLIENTI = null;
		}
		
		private void attach_PREVENTIVI(PREVENTIVI entity)
		{
			this.SendPropertyChanging();
			entity.CLIENTI = this;
		}
		
		private void detach_PREVENTIVI(PREVENTIVI entity)
		{
			this.SendPropertyChanging();
			entity.CLIENTI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TURNI_LAVORATIVI")]
	public partial class TURNI_LAVORATIVI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.TimeSpan _OraInizio;
		
		private System.TimeSpan _OraFine;
		
		private string _Nota;
		
		private string _CodiceFiscale;
		
		private System.DateTime _DataInizioElettricista;
		
		private System.DateTime _DataLavoro;
		
		private int _CodImpianto;
		
		private string _Targa;
		
		private EntityRef<ELETTRICISTI_CON_RUOLI> _ELETTRICISTI_CON_RUOLI;
		
		private EntityRef<FURGONI> _FURGONI;
		
		private EntityRef<LAVORI> _LAVORI;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOraInizioChanging(System.TimeSpan value);
    partial void OnOraInizioChanged();
    partial void OnOraFineChanging(System.TimeSpan value);
    partial void OnOraFineChanged();
    partial void OnNotaChanging(string value);
    partial void OnNotaChanged();
    partial void OnCodiceFiscaleChanging(string value);
    partial void OnCodiceFiscaleChanged();
    partial void OnDataInizioElettricistaChanging(System.DateTime value);
    partial void OnDataInizioElettricistaChanged();
    partial void OnDataLavoroChanging(System.DateTime value);
    partial void OnDataLavoroChanged();
    partial void OnCodImpiantoChanging(int value);
    partial void OnCodImpiantoChanged();
    partial void OnTargaChanging(string value);
    partial void OnTargaChanged();
    #endregion
		
		public TURNI_LAVORATIVI()
		{
			this._ELETTRICISTI_CON_RUOLI = default(EntityRef<ELETTRICISTI_CON_RUOLI>);
			this._FURGONI = default(EntityRef<FURGONI>);
			this._LAVORI = default(EntityRef<LAVORI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OraInizio", DbType="Time NOT NULL", IsPrimaryKey=true)]
		public System.TimeSpan OraInizio
		{
			get
			{
				return this._OraInizio;
			}
			set
			{
				if ((this._OraInizio != value))
				{
					this.OnOraInizioChanging(value);
					this.SendPropertyChanging();
					this._OraInizio = value;
					this.SendPropertyChanged("OraInizio");
					this.OnOraInizioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OraFine", DbType="Time NOT NULL")]
		public System.TimeSpan OraFine
		{
			get
			{
				return this._OraFine;
			}
			set
			{
				if ((this._OraFine != value))
				{
					this.OnOraFineChanging(value);
					this.SendPropertyChanging();
					this._OraFine = value;
					this.SendPropertyChanged("OraFine");
					this.OnOraFineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nota", DbType="VarChar(256)")]
		public string Nota
		{
			get
			{
				return this._Nota;
			}
			set
			{
				if ((this._Nota != value))
				{
					this.OnNotaChanging(value);
					this.SendPropertyChanging();
					this._Nota = value;
					this.SendPropertyChanged("Nota");
					this.OnNotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceFiscale", DbType="NChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodiceFiscale
		{
			get
			{
				return this._CodiceFiscale;
			}
			set
			{
				if ((this._CodiceFiscale != value))
				{
					if (this._ELETTRICISTI_CON_RUOLI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodiceFiscaleChanging(value);
					this.SendPropertyChanging();
					this._CodiceFiscale = value;
					this.SendPropertyChanged("CodiceFiscale");
					this.OnCodiceFiscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataInizioElettricista", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime DataInizioElettricista
		{
			get
			{
				return this._DataInizioElettricista;
			}
			set
			{
				if ((this._DataInizioElettricista != value))
				{
					if (this._ELETTRICISTI_CON_RUOLI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDataInizioElettricistaChanging(value);
					this.SendPropertyChanging();
					this._DataInizioElettricista = value;
					this.SendPropertyChanged("DataInizioElettricista");
					this.OnDataInizioElettricistaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataLavoro", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime DataLavoro
		{
			get
			{
				return this._DataLavoro;
			}
			set
			{
				if ((this._DataLavoro != value))
				{
					if (this._LAVORI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDataLavoroChanging(value);
					this.SendPropertyChanging();
					this._DataLavoro = value;
					this.SendPropertyChanged("DataLavoro");
					this.OnDataLavoroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodImpianto", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CodImpianto
		{
			get
			{
				return this._CodImpianto;
			}
			set
			{
				if ((this._CodImpianto != value))
				{
					if (this._LAVORI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodImpiantoChanging(value);
					this.SendPropertyChanging();
					this._CodImpianto = value;
					this.SendPropertyChanged("CodImpianto");
					this.OnCodImpiantoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Targa", DbType="NChar(7) NOT NULL", CanBeNull=false)]
		public string Targa
		{
			get
			{
				return this._Targa;
			}
			set
			{
				if ((this._Targa != value))
				{
					if (this._FURGONI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTargaChanging(value);
					this.SendPropertyChanging();
					this._Targa = value;
					this.SendPropertyChanged("Targa");
					this.OnTargaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ELETTRICISTI_CON_RUOLI_TURNI_LAVORATIVI", Storage="_ELETTRICISTI_CON_RUOLI", ThisKey="DataInizioElettricista,CodiceFiscale", OtherKey="DataInizio,CodiceFiscale", IsForeignKey=true)]
		public ELETTRICISTI_CON_RUOLI ELETTRICISTI_CON_RUOLI
		{
			get
			{
				return this._ELETTRICISTI_CON_RUOLI.Entity;
			}
			set
			{
				ELETTRICISTI_CON_RUOLI previousValue = this._ELETTRICISTI_CON_RUOLI.Entity;
				if (((previousValue != value) 
							|| (this._ELETTRICISTI_CON_RUOLI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ELETTRICISTI_CON_RUOLI.Entity = null;
						previousValue.TURNI_LAVORATIVI.Remove(this);
					}
					this._ELETTRICISTI_CON_RUOLI.Entity = value;
					if ((value != null))
					{
						value.TURNI_LAVORATIVI.Add(this);
						this._DataInizioElettricista = value.DataInizio;
						this._CodiceFiscale = value.CodiceFiscale;
					}
					else
					{
						this._DataInizioElettricista = default(System.DateTime);
						this._CodiceFiscale = default(string);
					}
					this.SendPropertyChanged("ELETTRICISTI_CON_RUOLI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FURGONI_TURNI_LAVORATIVI", Storage="_FURGONI", ThisKey="Targa", OtherKey="Targa", IsForeignKey=true)]
		public FURGONI FURGONI
		{
			get
			{
				return this._FURGONI.Entity;
			}
			set
			{
				FURGONI previousValue = this._FURGONI.Entity;
				if (((previousValue != value) 
							|| (this._FURGONI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FURGONI.Entity = null;
						previousValue.TURNI_LAVORATIVI.Remove(this);
					}
					this._FURGONI.Entity = value;
					if ((value != null))
					{
						value.TURNI_LAVORATIVI.Add(this);
						this._Targa = value.Targa;
					}
					else
					{
						this._Targa = default(string);
					}
					this.SendPropertyChanged("FURGONI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LAVORI_TURNI_LAVORATIVI", Storage="_LAVORI", ThisKey="DataLavoro,CodImpianto", OtherKey="Data,CodImpianto", IsForeignKey=true)]
		public LAVORI LAVORI
		{
			get
			{
				return this._LAVORI.Entity;
			}
			set
			{
				LAVORI previousValue = this._LAVORI.Entity;
				if (((previousValue != value) 
							|| (this._LAVORI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LAVORI.Entity = null;
						previousValue.TURNI_LAVORATIVI.Remove(this);
					}
					this._LAVORI.Entity = value;
					if ((value != null))
					{
						value.TURNI_LAVORATIVI.Add(this);
						this._DataLavoro = value.Data;
						this._CodImpianto = value.CodImpianto;
					}
					else
					{
						this._DataLavoro = default(System.DateTime);
						this._CodImpianto = default(int);
					}
					this.SendPropertyChanged("LAVORI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DETTAGLI_MATERIALI")]
	public partial class DETTAGLI_MATERIALI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CodMateriale;
		
		private int _CodImpianto;
		
		private System.DateTime _DataLavoro;
		
		private int _Quantità;
		
		private decimal _Prezzo;
		
		private System.Nullable<float> _Sconto;
		
		private string _Nota;
		
		private EntityRef<LAVORI> _LAVORI;
		
		private EntityRef<MATERIALI> _MATERIALI;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodMaterialeChanging(int value);
    partial void OnCodMaterialeChanged();
    partial void OnCodImpiantoChanging(int value);
    partial void OnCodImpiantoChanged();
    partial void OnDataLavoroChanging(System.DateTime value);
    partial void OnDataLavoroChanged();
    partial void OnQuantitàChanging(int value);
    partial void OnQuantitàChanged();
    partial void OnPrezzoChanging(decimal value);
    partial void OnPrezzoChanged();
    partial void OnScontoChanging(System.Nullable<float> value);
    partial void OnScontoChanged();
    partial void OnNotaChanging(string value);
    partial void OnNotaChanged();
    #endregion
		
		public DETTAGLI_MATERIALI()
		{
			this._LAVORI = default(EntityRef<LAVORI>);
			this._MATERIALI = default(EntityRef<MATERIALI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodMateriale", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CodMateriale
		{
			get
			{
				return this._CodMateriale;
			}
			set
			{
				if ((this._CodMateriale != value))
				{
					if (this._MATERIALI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodMaterialeChanging(value);
					this.SendPropertyChanging();
					this._CodMateriale = value;
					this.SendPropertyChanged("CodMateriale");
					this.OnCodMaterialeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodImpianto", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CodImpianto
		{
			get
			{
				return this._CodImpianto;
			}
			set
			{
				if ((this._CodImpianto != value))
				{
					if (this._LAVORI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodImpiantoChanging(value);
					this.SendPropertyChanging();
					this._CodImpianto = value;
					this.SendPropertyChanged("CodImpianto");
					this.OnCodImpiantoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataLavoro", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime DataLavoro
		{
			get
			{
				return this._DataLavoro;
			}
			set
			{
				if ((this._DataLavoro != value))
				{
					if (this._LAVORI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDataLavoroChanging(value);
					this.SendPropertyChanging();
					this._DataLavoro = value;
					this.SendPropertyChanged("DataLavoro");
					this.OnDataLavoroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantità", DbType="Int NOT NULL")]
		public int Quantità
		{
			get
			{
				return this._Quantità;
			}
			set
			{
				if ((this._Quantità != value))
				{
					this.OnQuantitàChanging(value);
					this.SendPropertyChanging();
					this._Quantità = value;
					this.SendPropertyChanged("Quantità");
					this.OnQuantitàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prezzo", DbType="Money NOT NULL")]
		public decimal Prezzo
		{
			get
			{
				return this._Prezzo;
			}
			set
			{
				if ((this._Prezzo != value))
				{
					this.OnPrezzoChanging(value);
					this.SendPropertyChanging();
					this._Prezzo = value;
					this.SendPropertyChanged("Prezzo");
					this.OnPrezzoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sconto", DbType="Real")]
		public System.Nullable<float> Sconto
		{
			get
			{
				return this._Sconto;
			}
			set
			{
				if ((this._Sconto != value))
				{
					this.OnScontoChanging(value);
					this.SendPropertyChanging();
					this._Sconto = value;
					this.SendPropertyChanged("Sconto");
					this.OnScontoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nota", DbType="VarChar(256)")]
		public string Nota
		{
			get
			{
				return this._Nota;
			}
			set
			{
				if ((this._Nota != value))
				{
					this.OnNotaChanging(value);
					this.SendPropertyChanging();
					this._Nota = value;
					this.SendPropertyChanged("Nota");
					this.OnNotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LAVORI_DETTAGLI_MATERIALI", Storage="_LAVORI", ThisKey="DataLavoro,CodImpianto", OtherKey="Data,CodImpianto", IsForeignKey=true)]
		public LAVORI LAVORI
		{
			get
			{
				return this._LAVORI.Entity;
			}
			set
			{
				LAVORI previousValue = this._LAVORI.Entity;
				if (((previousValue != value) 
							|| (this._LAVORI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LAVORI.Entity = null;
						previousValue.DETTAGLI_MATERIALI.Remove(this);
					}
					this._LAVORI.Entity = value;
					if ((value != null))
					{
						value.DETTAGLI_MATERIALI.Add(this);
						this._DataLavoro = value.Data;
						this._CodImpianto = value.CodImpianto;
					}
					else
					{
						this._DataLavoro = default(System.DateTime);
						this._CodImpianto = default(int);
					}
					this.SendPropertyChanged("LAVORI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MATERIALI_DETTAGLI_MATERIALI", Storage="_MATERIALI", ThisKey="CodMateriale", OtherKey="CodMateriale", IsForeignKey=true)]
		public MATERIALI MATERIALI
		{
			get
			{
				return this._MATERIALI.Entity;
			}
			set
			{
				MATERIALI previousValue = this._MATERIALI.Entity;
				if (((previousValue != value) 
							|| (this._MATERIALI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MATERIALI.Entity = null;
						previousValue.DETTAGLI_MATERIALI.Remove(this);
					}
					this._MATERIALI.Entity = value;
					if ((value != null))
					{
						value.DETTAGLI_MATERIALI.Add(this);
						this._CodMateriale = value.CodMateriale;
					}
					else
					{
						this._CodMateriale = default(int);
					}
					this.SendPropertyChanged("MATERIALI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ELETTRICISTI")]
	public partial class ELETTRICISTI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodiceFiscale;
		
		private string _Nome;
		
		private string _Cognome;
		
		private EntitySet<ELETTRICISTI_CON_RUOLI> _ELETTRICISTI_CON_RUOLI;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodiceFiscaleChanging(string value);
    partial void OnCodiceFiscaleChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnCognomeChanging(string value);
    partial void OnCognomeChanged();
    #endregion
		
		public ELETTRICISTI()
		{
			this._ELETTRICISTI_CON_RUOLI = new EntitySet<ELETTRICISTI_CON_RUOLI>(new Action<ELETTRICISTI_CON_RUOLI>(this.attach_ELETTRICISTI_CON_RUOLI), new Action<ELETTRICISTI_CON_RUOLI>(this.detach_ELETTRICISTI_CON_RUOLI));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceFiscale", DbType="NChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodiceFiscale
		{
			get
			{
				return this._CodiceFiscale;
			}
			set
			{
				if ((this._CodiceFiscale != value))
				{
					this.OnCodiceFiscaleChanging(value);
					this.SendPropertyChanging();
					this._CodiceFiscale = value;
					this.SendPropertyChanged("CodiceFiscale");
					this.OnCodiceFiscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(32)")]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cognome", DbType="VarChar(32)")]
		public string Cognome
		{
			get
			{
				return this._Cognome;
			}
			set
			{
				if ((this._Cognome != value))
				{
					this.OnCognomeChanging(value);
					this.SendPropertyChanging();
					this._Cognome = value;
					this.SendPropertyChanged("Cognome");
					this.OnCognomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ELETTRICISTI_ELETTRICISTI_CON_RUOLI", Storage="_ELETTRICISTI_CON_RUOLI", ThisKey="CodiceFiscale", OtherKey="CodiceFiscale")]
		public EntitySet<ELETTRICISTI_CON_RUOLI> ELETTRICISTI_CON_RUOLI
		{
			get
			{
				return this._ELETTRICISTI_CON_RUOLI;
			}
			set
			{
				this._ELETTRICISTI_CON_RUOLI.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ELETTRICISTI_CON_RUOLI(ELETTRICISTI_CON_RUOLI entity)
		{
			this.SendPropertyChanging();
			entity.ELETTRICISTI = this;
		}
		
		private void detach_ELETTRICISTI_CON_RUOLI(ELETTRICISTI_CON_RUOLI entity)
		{
			this.SendPropertyChanging();
			entity.ELETTRICISTI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ELETTRICISTI_CON_RUOLI")]
	public partial class ELETTRICISTI_CON_RUOLI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _DataInizio;
		
		private System.Nullable<System.DateTime> _DataFine;
		
		private string _CodiceFiscale;
		
		private int _CodRuolo;
		
		private EntitySet<TURNI_LAVORATIVI> _TURNI_LAVORATIVI;
		
		private EntitySet<PREVENTIVI> _PREVENTIVI;
		
		private EntityRef<ELETTRICISTI> _ELETTRICISTI;
		
		private EntityRef<RUOLI> _RUOLI;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDataInizioChanging(System.DateTime value);
    partial void OnDataInizioChanged();
    partial void OnDataFineChanging(System.Nullable<System.DateTime> value);
    partial void OnDataFineChanged();
    partial void OnCodiceFiscaleChanging(string value);
    partial void OnCodiceFiscaleChanged();
    partial void OnCodRuoloChanging(int value);
    partial void OnCodRuoloChanged();
    #endregion
		
		public ELETTRICISTI_CON_RUOLI()
		{
			this._TURNI_LAVORATIVI = new EntitySet<TURNI_LAVORATIVI>(new Action<TURNI_LAVORATIVI>(this.attach_TURNI_LAVORATIVI), new Action<TURNI_LAVORATIVI>(this.detach_TURNI_LAVORATIVI));
			this._PREVENTIVI = new EntitySet<PREVENTIVI>(new Action<PREVENTIVI>(this.attach_PREVENTIVI), new Action<PREVENTIVI>(this.detach_PREVENTIVI));
			this._ELETTRICISTI = default(EntityRef<ELETTRICISTI>);
			this._RUOLI = default(EntityRef<RUOLI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataInizio", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime DataInizio
		{
			get
			{
				return this._DataInizio;
			}
			set
			{
				if ((this._DataInizio != value))
				{
					this.OnDataInizioChanging(value);
					this.SendPropertyChanging();
					this._DataInizio = value;
					this.SendPropertyChanged("DataInizio");
					this.OnDataInizioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataFine", DbType="Date")]
		public System.Nullable<System.DateTime> DataFine
		{
			get
			{
				return this._DataFine;
			}
			set
			{
				if ((this._DataFine != value))
				{
					this.OnDataFineChanging(value);
					this.SendPropertyChanging();
					this._DataFine = value;
					this.SendPropertyChanged("DataFine");
					this.OnDataFineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceFiscale", DbType="NChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodiceFiscale
		{
			get
			{
				return this._CodiceFiscale;
			}
			set
			{
				if ((this._CodiceFiscale != value))
				{
					if (this._ELETTRICISTI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodiceFiscaleChanging(value);
					this.SendPropertyChanging();
					this._CodiceFiscale = value;
					this.SendPropertyChanged("CodiceFiscale");
					this.OnCodiceFiscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodRuolo", DbType="Int NOT NULL")]
		public int CodRuolo
		{
			get
			{
				return this._CodRuolo;
			}
			set
			{
				if ((this._CodRuolo != value))
				{
					if (this._RUOLI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodRuoloChanging(value);
					this.SendPropertyChanging();
					this._CodRuolo = value;
					this.SendPropertyChanged("CodRuolo");
					this.OnCodRuoloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ELETTRICISTI_CON_RUOLI_TURNI_LAVORATIVI", Storage="_TURNI_LAVORATIVI", ThisKey="DataInizio,CodiceFiscale", OtherKey="DataInizioElettricista,CodiceFiscale")]
		public EntitySet<TURNI_LAVORATIVI> TURNI_LAVORATIVI
		{
			get
			{
				return this._TURNI_LAVORATIVI;
			}
			set
			{
				this._TURNI_LAVORATIVI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ELETTRICISTI_CON_RUOLI_PREVENTIVI", Storage="_PREVENTIVI", ThisKey="DataInizio,CodiceFiscale", OtherKey="DataInizioElettricista,CodiceFiscale")]
		public EntitySet<PREVENTIVI> PREVENTIVI
		{
			get
			{
				return this._PREVENTIVI;
			}
			set
			{
				this._PREVENTIVI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ELETTRICISTI_ELETTRICISTI_CON_RUOLI", Storage="_ELETTRICISTI", ThisKey="CodiceFiscale", OtherKey="CodiceFiscale", IsForeignKey=true)]
		public ELETTRICISTI ELETTRICISTI
		{
			get
			{
				return this._ELETTRICISTI.Entity;
			}
			set
			{
				ELETTRICISTI previousValue = this._ELETTRICISTI.Entity;
				if (((previousValue != value) 
							|| (this._ELETTRICISTI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ELETTRICISTI.Entity = null;
						previousValue.ELETTRICISTI_CON_RUOLI.Remove(this);
					}
					this._ELETTRICISTI.Entity = value;
					if ((value != null))
					{
						value.ELETTRICISTI_CON_RUOLI.Add(this);
						this._CodiceFiscale = value.CodiceFiscale;
					}
					else
					{
						this._CodiceFiscale = default(string);
					}
					this.SendPropertyChanged("ELETTRICISTI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RUOLI_ELETTRICISTI_CON_RUOLI", Storage="_RUOLI", ThisKey="CodRuolo", OtherKey="CodRuolo", IsForeignKey=true)]
		public RUOLI RUOLI
		{
			get
			{
				return this._RUOLI.Entity;
			}
			set
			{
				RUOLI previousValue = this._RUOLI.Entity;
				if (((previousValue != value) 
							|| (this._RUOLI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RUOLI.Entity = null;
						previousValue.ELETTRICISTI_CON_RUOLI.Remove(this);
					}
					this._RUOLI.Entity = value;
					if ((value != null))
					{
						value.ELETTRICISTI_CON_RUOLI.Add(this);
						this._CodRuolo = value.CodRuolo;
					}
					else
					{
						this._CodRuolo = default(int);
					}
					this.SendPropertyChanged("RUOLI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TURNI_LAVORATIVI(TURNI_LAVORATIVI entity)
		{
			this.SendPropertyChanging();
			entity.ELETTRICISTI_CON_RUOLI = this;
		}
		
		private void detach_TURNI_LAVORATIVI(TURNI_LAVORATIVI entity)
		{
			this.SendPropertyChanging();
			entity.ELETTRICISTI_CON_RUOLI = null;
		}
		
		private void attach_PREVENTIVI(PREVENTIVI entity)
		{
			this.SendPropertyChanging();
			entity.ELETTRICISTI_CON_RUOLI = this;
		}
		
		private void detach_PREVENTIVI(PREVENTIVI entity)
		{
			this.SendPropertyChanging();
			entity.ELETTRICISTI_CON_RUOLI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FORNITORI")]
	public partial class FORNITORI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CodFornitore;
		
		private string _Nome;
		
		private string _Telefono;
		
		private EntitySet<MATERIALI> _MATERIALI;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodFornitoreChanging(int value);
    partial void OnCodFornitoreChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    #endregion
		
		public FORNITORI()
		{
			this._MATERIALI = new EntitySet<MATERIALI>(new Action<MATERIALI>(this.attach_MATERIALI), new Action<MATERIALI>(this.detach_MATERIALI));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodFornitore", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CodFornitore
		{
			get
			{
				return this._CodFornitore;
			}
			set
			{
				if ((this._CodFornitore != value))
				{
					this.OnCodFornitoreChanging(value);
					this.SendPropertyChanging();
					this._CodFornitore = value;
					this.SendPropertyChanged("CodFornitore");
					this.OnCodFornitoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FORNITORI_MATERIALI", Storage="_MATERIALI", ThisKey="CodFornitore", OtherKey="CodFornitore")]
		public EntitySet<MATERIALI> MATERIALI
		{
			get
			{
				return this._MATERIALI;
			}
			set
			{
				this._MATERIALI.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MATERIALI(MATERIALI entity)
		{
			this.SendPropertyChanging();
			entity.FORNITORI = this;
		}
		
		private void detach_MATERIALI(MATERIALI entity)
		{
			this.SendPropertyChanging();
			entity.FORNITORI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FURGONI")]
	public partial class FURGONI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Targa;
		
		private string _Marca;
		
		private byte _Posti;
		
		private int _KM;
		
		private EntitySet<TURNI_LAVORATIVI> _TURNI_LAVORATIVI;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTargaChanging(string value);
    partial void OnTargaChanged();
    partial void OnMarcaChanging(string value);
    partial void OnMarcaChanged();
    partial void OnPostiChanging(byte value);
    partial void OnPostiChanged();
    partial void OnKMChanging(int value);
    partial void OnKMChanged();
    #endregion
		
		public FURGONI()
		{
			this._TURNI_LAVORATIVI = new EntitySet<TURNI_LAVORATIVI>(new Action<TURNI_LAVORATIVI>(this.attach_TURNI_LAVORATIVI), new Action<TURNI_LAVORATIVI>(this.detach_TURNI_LAVORATIVI));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Targa", DbType="NChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Targa
		{
			get
			{
				return this._Targa;
			}
			set
			{
				if ((this._Targa != value))
				{
					this.OnTargaChanging(value);
					this.SendPropertyChanging();
					this._Targa = value;
					this.SendPropertyChanged("Targa");
					this.OnTargaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marca", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string Marca
		{
			get
			{
				return this._Marca;
			}
			set
			{
				if ((this._Marca != value))
				{
					this.OnMarcaChanging(value);
					this.SendPropertyChanging();
					this._Marca = value;
					this.SendPropertyChanged("Marca");
					this.OnMarcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Posti", DbType="TinyInt NOT NULL")]
		public byte Posti
		{
			get
			{
				return this._Posti;
			}
			set
			{
				if ((this._Posti != value))
				{
					this.OnPostiChanging(value);
					this.SendPropertyChanging();
					this._Posti = value;
					this.SendPropertyChanged("Posti");
					this.OnPostiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KM", DbType="Int NOT NULL")]
		public int KM
		{
			get
			{
				return this._KM;
			}
			set
			{
				if ((this._KM != value))
				{
					this.OnKMChanging(value);
					this.SendPropertyChanging();
					this._KM = value;
					this.SendPropertyChanged("KM");
					this.OnKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FURGONI_TURNI_LAVORATIVI", Storage="_TURNI_LAVORATIVI", ThisKey="Targa", OtherKey="Targa")]
		public EntitySet<TURNI_LAVORATIVI> TURNI_LAVORATIVI
		{
			get
			{
				return this._TURNI_LAVORATIVI;
			}
			set
			{
				this._TURNI_LAVORATIVI.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TURNI_LAVORATIVI(TURNI_LAVORATIVI entity)
		{
			this.SendPropertyChanging();
			entity.FURGONI = this;
		}
		
		private void detach_TURNI_LAVORATIVI(TURNI_LAVORATIVI entity)
		{
			this.SendPropertyChanging();
			entity.FURGONI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IMPIANTI_ELETTRICI")]
	public partial class IMPIANTI_ELETTRICI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CodImpianto;
		
		private System.DateTime _DataInizio;
		
		private System.Nullable<System.DateTime> _DataFine;
		
		private string _Regione;
		
		private string _Città;
		
		private string _Via;
		
		private int _Numero;
		
		private string _Note;
		
		private int _CodCliente;
		
		private EntitySet<LAVORI> _LAVORI;
		
		private EntityRef<CLIENTI> _CLIENTI;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodImpiantoChanging(int value);
    partial void OnCodImpiantoChanged();
    partial void OnDataInizioChanging(System.DateTime value);
    partial void OnDataInizioChanged();
    partial void OnDataFineChanging(System.Nullable<System.DateTime> value);
    partial void OnDataFineChanged();
    partial void OnRegioneChanging(string value);
    partial void OnRegioneChanged();
    partial void OnCittàChanging(string value);
    partial void OnCittàChanged();
    partial void OnViaChanging(string value);
    partial void OnViaChanged();
    partial void OnNumeroChanging(int value);
    partial void OnNumeroChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnCodClienteChanging(int value);
    partial void OnCodClienteChanged();
    #endregion
		
		public IMPIANTI_ELETTRICI()
		{
			this._LAVORI = new EntitySet<LAVORI>(new Action<LAVORI>(this.attach_LAVORI), new Action<LAVORI>(this.detach_LAVORI));
			this._CLIENTI = default(EntityRef<CLIENTI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodImpianto", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CodImpianto
		{
			get
			{
				return this._CodImpianto;
			}
			set
			{
				if ((this._CodImpianto != value))
				{
					this.OnCodImpiantoChanging(value);
					this.SendPropertyChanging();
					this._CodImpianto = value;
					this.SendPropertyChanged("CodImpianto");
					this.OnCodImpiantoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataInizio", DbType="Date NOT NULL")]
		public System.DateTime DataInizio
		{
			get
			{
				return this._DataInizio;
			}
			set
			{
				if ((this._DataInizio != value))
				{
					this.OnDataInizioChanging(value);
					this.SendPropertyChanging();
					this._DataInizio = value;
					this.SendPropertyChanged("DataInizio");
					this.OnDataInizioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataFine", DbType="Date")]
		public System.Nullable<System.DateTime> DataFine
		{
			get
			{
				return this._DataFine;
			}
			set
			{
				if ((this._DataFine != value))
				{
					this.OnDataFineChanging(value);
					this.SendPropertyChanging();
					this._DataFine = value;
					this.SendPropertyChanged("DataFine");
					this.OnDataFineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Regione", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string Regione
		{
			get
			{
				return this._Regione;
			}
			set
			{
				if ((this._Regione != value))
				{
					this.OnRegioneChanging(value);
					this.SendPropertyChanging();
					this._Regione = value;
					this.SendPropertyChanged("Regione");
					this.OnRegioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Città", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string Città
		{
			get
			{
				return this._Città;
			}
			set
			{
				if ((this._Città != value))
				{
					this.OnCittàChanging(value);
					this.SendPropertyChanging();
					this._Città = value;
					this.SendPropertyChanged("Città");
					this.OnCittàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Via", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string Via
		{
			get
			{
				return this._Via;
			}
			set
			{
				if ((this._Via != value))
				{
					this.OnViaChanging(value);
					this.SendPropertyChanging();
					this._Via = value;
					this.SendPropertyChanged("Via");
					this.OnViaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero", DbType="Int NOT NULL")]
		public int Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					this.OnNumeroChanging(value);
					this.SendPropertyChanging();
					this._Numero = value;
					this.SendPropertyChanged("Numero");
					this.OnNumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="VarChar(256)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodCliente", DbType="Int NOT NULL")]
		public int CodCliente
		{
			get
			{
				return this._CodCliente;
			}
			set
			{
				if ((this._CodCliente != value))
				{
					if (this._CLIENTI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodClienteChanging(value);
					this.SendPropertyChanging();
					this._CodCliente = value;
					this.SendPropertyChanged("CodCliente");
					this.OnCodClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IMPIANTI_ELETTRICI_LAVORI", Storage="_LAVORI", ThisKey="CodImpianto", OtherKey="CodImpianto")]
		public EntitySet<LAVORI> LAVORI
		{
			get
			{
				return this._LAVORI;
			}
			set
			{
				this._LAVORI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENTI_IMPIANTI_ELETTRICI", Storage="_CLIENTI", ThisKey="CodCliente", OtherKey="CodCliente", IsForeignKey=true)]
		public CLIENTI CLIENTI
		{
			get
			{
				return this._CLIENTI.Entity;
			}
			set
			{
				CLIENTI previousValue = this._CLIENTI.Entity;
				if (((previousValue != value) 
							|| (this._CLIENTI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CLIENTI.Entity = null;
						previousValue.IMPIANTI_ELETTRICI.Remove(this);
					}
					this._CLIENTI.Entity = value;
					if ((value != null))
					{
						value.IMPIANTI_ELETTRICI.Add(this);
						this._CodCliente = value.CodCliente;
					}
					else
					{
						this._CodCliente = default(int);
					}
					this.SendPropertyChanged("CLIENTI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LAVORI(LAVORI entity)
		{
			this.SendPropertyChanging();
			entity.IMPIANTI_ELETTRICI = this;
		}
		
		private void detach_LAVORI(LAVORI entity)
		{
			this.SendPropertyChanging();
			entity.IMPIANTI_ELETTRICI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LAVORI")]
	public partial class LAVORI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _Data;
		
		private int _CodImpianto;
		
		private decimal _Costo;
		
		private int _CodTipologia;
		
		private EntitySet<TURNI_LAVORATIVI> _TURNI_LAVORATIVI;
		
		private EntitySet<DETTAGLI_MATERIALI> _DETTAGLI_MATERIALI;
		
		private EntityRef<IMPIANTI_ELETTRICI> _IMPIANTI_ELETTRICI;
		
		private EntityRef<TIPOLOGIE> _TIPOLOGIE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDataChanging(System.DateTime value);
    partial void OnDataChanged();
    partial void OnCodImpiantoChanging(int value);
    partial void OnCodImpiantoChanged();
    partial void OnCostoChanging(decimal value);
    partial void OnCostoChanged();
    partial void OnCodTipologiaChanging(int value);
    partial void OnCodTipologiaChanged();
    #endregion
		
		public LAVORI()
		{
			this._TURNI_LAVORATIVI = new EntitySet<TURNI_LAVORATIVI>(new Action<TURNI_LAVORATIVI>(this.attach_TURNI_LAVORATIVI), new Action<TURNI_LAVORATIVI>(this.detach_TURNI_LAVORATIVI));
			this._DETTAGLI_MATERIALI = new EntitySet<DETTAGLI_MATERIALI>(new Action<DETTAGLI_MATERIALI>(this.attach_DETTAGLI_MATERIALI), new Action<DETTAGLI_MATERIALI>(this.detach_DETTAGLI_MATERIALI));
			this._IMPIANTI_ELETTRICI = default(EntityRef<IMPIANTI_ELETTRICI>);
			this._TIPOLOGIE = default(EntityRef<TIPOLOGIE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodImpianto", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CodImpianto
		{
			get
			{
				return this._CodImpianto;
			}
			set
			{
				if ((this._CodImpianto != value))
				{
					if (this._IMPIANTI_ELETTRICI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodImpiantoChanging(value);
					this.SendPropertyChanging();
					this._CodImpianto = value;
					this.SendPropertyChanged("CodImpianto");
					this.OnCodImpiantoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Costo", DbType="Money NOT NULL")]
		public decimal Costo
		{
			get
			{
				return this._Costo;
			}
			set
			{
				if ((this._Costo != value))
				{
					this.OnCostoChanging(value);
					this.SendPropertyChanging();
					this._Costo = value;
					this.SendPropertyChanged("Costo");
					this.OnCostoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodTipologia", DbType="Int NOT NULL")]
		public int CodTipologia
		{
			get
			{
				return this._CodTipologia;
			}
			set
			{
				if ((this._CodTipologia != value))
				{
					if (this._TIPOLOGIE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodTipologiaChanging(value);
					this.SendPropertyChanging();
					this._CodTipologia = value;
					this.SendPropertyChanged("CodTipologia");
					this.OnCodTipologiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LAVORI_TURNI_LAVORATIVI", Storage="_TURNI_LAVORATIVI", ThisKey="Data,CodImpianto", OtherKey="DataLavoro,CodImpianto")]
		public EntitySet<TURNI_LAVORATIVI> TURNI_LAVORATIVI
		{
			get
			{
				return this._TURNI_LAVORATIVI;
			}
			set
			{
				this._TURNI_LAVORATIVI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LAVORI_DETTAGLI_MATERIALI", Storage="_DETTAGLI_MATERIALI", ThisKey="Data,CodImpianto", OtherKey="DataLavoro,CodImpianto")]
		public EntitySet<DETTAGLI_MATERIALI> DETTAGLI_MATERIALI
		{
			get
			{
				return this._DETTAGLI_MATERIALI;
			}
			set
			{
				this._DETTAGLI_MATERIALI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IMPIANTI_ELETTRICI_LAVORI", Storage="_IMPIANTI_ELETTRICI", ThisKey="CodImpianto", OtherKey="CodImpianto", IsForeignKey=true)]
		public IMPIANTI_ELETTRICI IMPIANTI_ELETTRICI
		{
			get
			{
				return this._IMPIANTI_ELETTRICI.Entity;
			}
			set
			{
				IMPIANTI_ELETTRICI previousValue = this._IMPIANTI_ELETTRICI.Entity;
				if (((previousValue != value) 
							|| (this._IMPIANTI_ELETTRICI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IMPIANTI_ELETTRICI.Entity = null;
						previousValue.LAVORI.Remove(this);
					}
					this._IMPIANTI_ELETTRICI.Entity = value;
					if ((value != null))
					{
						value.LAVORI.Add(this);
						this._CodImpianto = value.CodImpianto;
					}
					else
					{
						this._CodImpianto = default(int);
					}
					this.SendPropertyChanged("IMPIANTI_ELETTRICI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPOLOGIE_LAVORI", Storage="_TIPOLOGIE", ThisKey="CodTipologia", OtherKey="CodTipologia", IsForeignKey=true)]
		public TIPOLOGIE TIPOLOGIE
		{
			get
			{
				return this._TIPOLOGIE.Entity;
			}
			set
			{
				TIPOLOGIE previousValue = this._TIPOLOGIE.Entity;
				if (((previousValue != value) 
							|| (this._TIPOLOGIE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TIPOLOGIE.Entity = null;
						previousValue.LAVORI.Remove(this);
					}
					this._TIPOLOGIE.Entity = value;
					if ((value != null))
					{
						value.LAVORI.Add(this);
						this._CodTipologia = value.CodTipologia;
					}
					else
					{
						this._CodTipologia = default(int);
					}
					this.SendPropertyChanged("TIPOLOGIE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TURNI_LAVORATIVI(TURNI_LAVORATIVI entity)
		{
			this.SendPropertyChanging();
			entity.LAVORI = this;
		}
		
		private void detach_TURNI_LAVORATIVI(TURNI_LAVORATIVI entity)
		{
			this.SendPropertyChanging();
			entity.LAVORI = null;
		}
		
		private void attach_DETTAGLI_MATERIALI(DETTAGLI_MATERIALI entity)
		{
			this.SendPropertyChanging();
			entity.LAVORI = this;
		}
		
		private void detach_DETTAGLI_MATERIALI(DETTAGLI_MATERIALI entity)
		{
			this.SendPropertyChanging();
			entity.LAVORI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MATERIALI")]
	public partial class MATERIALI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CodMateriale;
		
		private string _Nome;
		
		private int _Quantità;
		
		private decimal _Prezzo;
		
		private string _Descrizione;
		
		private int _QuantitàVenduta;
		
		private int _CodFornitore;
		
		private EntitySet<DETTAGLI_MATERIALI> _DETTAGLI_MATERIALI;
		
		private EntitySet<MATERIALI_IN_PREVENTIVI> _MATERIALI_IN_PREVENTIVI;
		
		private EntityRef<FORNITORI> _FORNITORI;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodMaterialeChanging(int value);
    partial void OnCodMaterialeChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnQuantitàChanging(int value);
    partial void OnQuantitàChanged();
    partial void OnPrezzoChanging(decimal value);
    partial void OnPrezzoChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    partial void OnQuantitàVendutaChanging(int value);
    partial void OnQuantitàVendutaChanged();
    partial void OnCodFornitoreChanging(int value);
    partial void OnCodFornitoreChanged();
    #endregion
		
		public MATERIALI()
		{
			this._DETTAGLI_MATERIALI = new EntitySet<DETTAGLI_MATERIALI>(new Action<DETTAGLI_MATERIALI>(this.attach_DETTAGLI_MATERIALI), new Action<DETTAGLI_MATERIALI>(this.detach_DETTAGLI_MATERIALI));
			this._MATERIALI_IN_PREVENTIVI = new EntitySet<MATERIALI_IN_PREVENTIVI>(new Action<MATERIALI_IN_PREVENTIVI>(this.attach_MATERIALI_IN_PREVENTIVI), new Action<MATERIALI_IN_PREVENTIVI>(this.detach_MATERIALI_IN_PREVENTIVI));
			this._FORNITORI = default(EntityRef<FORNITORI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodMateriale", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CodMateriale
		{
			get
			{
				return this._CodMateriale;
			}
			set
			{
				if ((this._CodMateriale != value))
				{
					this.OnCodMaterialeChanging(value);
					this.SendPropertyChanging();
					this._CodMateriale = value;
					this.SendPropertyChanged("CodMateriale");
					this.OnCodMaterialeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantità", DbType="Int NOT NULL")]
		public int Quantità
		{
			get
			{
				return this._Quantità;
			}
			set
			{
				if ((this._Quantità != value))
				{
					this.OnQuantitàChanging(value);
					this.SendPropertyChanging();
					this._Quantità = value;
					this.SendPropertyChanged("Quantità");
					this.OnQuantitàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prezzo", DbType="Money NOT NULL")]
		public decimal Prezzo
		{
			get
			{
				return this._Prezzo;
			}
			set
			{
				if ((this._Prezzo != value))
				{
					this.OnPrezzoChanging(value);
					this.SendPropertyChanging();
					this._Prezzo = value;
					this.SendPropertyChanged("Prezzo");
					this.OnPrezzoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantitàVenduta", DbType="Int NOT NULL")]
		public int QuantitàVenduta
		{
			get
			{
				return this._QuantitàVenduta;
			}
			set
			{
				if ((this._QuantitàVenduta != value))
				{
					this.OnQuantitàVendutaChanging(value);
					this.SendPropertyChanging();
					this._QuantitàVenduta = value;
					this.SendPropertyChanged("QuantitàVenduta");
					this.OnQuantitàVendutaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodFornitore", DbType="Int NOT NULL")]
		public int CodFornitore
		{
			get
			{
				return this._CodFornitore;
			}
			set
			{
				if ((this._CodFornitore != value))
				{
					if (this._FORNITORI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodFornitoreChanging(value);
					this.SendPropertyChanging();
					this._CodFornitore = value;
					this.SendPropertyChanged("CodFornitore");
					this.OnCodFornitoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MATERIALI_DETTAGLI_MATERIALI", Storage="_DETTAGLI_MATERIALI", ThisKey="CodMateriale", OtherKey="CodMateriale")]
		public EntitySet<DETTAGLI_MATERIALI> DETTAGLI_MATERIALI
		{
			get
			{
				return this._DETTAGLI_MATERIALI;
			}
			set
			{
				this._DETTAGLI_MATERIALI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MATERIALI_MATERIALI_IN_PREVENTIVI", Storage="_MATERIALI_IN_PREVENTIVI", ThisKey="CodMateriale", OtherKey="CodMateriale")]
		public EntitySet<MATERIALI_IN_PREVENTIVI> MATERIALI_IN_PREVENTIVI
		{
			get
			{
				return this._MATERIALI_IN_PREVENTIVI;
			}
			set
			{
				this._MATERIALI_IN_PREVENTIVI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FORNITORI_MATERIALI", Storage="_FORNITORI", ThisKey="CodFornitore", OtherKey="CodFornitore", IsForeignKey=true)]
		public FORNITORI FORNITORI
		{
			get
			{
				return this._FORNITORI.Entity;
			}
			set
			{
				FORNITORI previousValue = this._FORNITORI.Entity;
				if (((previousValue != value) 
							|| (this._FORNITORI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FORNITORI.Entity = null;
						previousValue.MATERIALI.Remove(this);
					}
					this._FORNITORI.Entity = value;
					if ((value != null))
					{
						value.MATERIALI.Add(this);
						this._CodFornitore = value.CodFornitore;
					}
					else
					{
						this._CodFornitore = default(int);
					}
					this.SendPropertyChanged("FORNITORI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DETTAGLI_MATERIALI(DETTAGLI_MATERIALI entity)
		{
			this.SendPropertyChanging();
			entity.MATERIALI = this;
		}
		
		private void detach_DETTAGLI_MATERIALI(DETTAGLI_MATERIALI entity)
		{
			this.SendPropertyChanging();
			entity.MATERIALI = null;
		}
		
		private void attach_MATERIALI_IN_PREVENTIVI(MATERIALI_IN_PREVENTIVI entity)
		{
			this.SendPropertyChanging();
			entity.MATERIALI = this;
		}
		
		private void detach_MATERIALI_IN_PREVENTIVI(MATERIALI_IN_PREVENTIVI entity)
		{
			this.SendPropertyChanging();
			entity.MATERIALI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MATERIALI_IN_PREVENTIVI")]
	public partial class MATERIALI_IN_PREVENTIVI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CodMateriale;
		
		private int _CodPreventivo;
		
		private int _Quantità;
		
		private string _Nota;
		
		private EntityRef<MATERIALI> _MATERIALI;
		
		private EntityRef<PREVENTIVI> _PREVENTIVI;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodMaterialeChanging(int value);
    partial void OnCodMaterialeChanged();
    partial void OnCodPreventivoChanging(int value);
    partial void OnCodPreventivoChanged();
    partial void OnQuantitàChanging(int value);
    partial void OnQuantitàChanged();
    partial void OnNotaChanging(string value);
    partial void OnNotaChanged();
    #endregion
		
		public MATERIALI_IN_PREVENTIVI()
		{
			this._MATERIALI = default(EntityRef<MATERIALI>);
			this._PREVENTIVI = default(EntityRef<PREVENTIVI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodMateriale", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CodMateriale
		{
			get
			{
				return this._CodMateriale;
			}
			set
			{
				if ((this._CodMateriale != value))
				{
					if (this._MATERIALI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodMaterialeChanging(value);
					this.SendPropertyChanging();
					this._CodMateriale = value;
					this.SendPropertyChanged("CodMateriale");
					this.OnCodMaterialeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodPreventivo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CodPreventivo
		{
			get
			{
				return this._CodPreventivo;
			}
			set
			{
				if ((this._CodPreventivo != value))
				{
					if (this._PREVENTIVI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodPreventivoChanging(value);
					this.SendPropertyChanging();
					this._CodPreventivo = value;
					this.SendPropertyChanged("CodPreventivo");
					this.OnCodPreventivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantità", DbType="Int NOT NULL")]
		public int Quantità
		{
			get
			{
				return this._Quantità;
			}
			set
			{
				if ((this._Quantità != value))
				{
					this.OnQuantitàChanging(value);
					this.SendPropertyChanging();
					this._Quantità = value;
					this.SendPropertyChanged("Quantità");
					this.OnQuantitàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nota", DbType="VarChar(256)")]
		public string Nota
		{
			get
			{
				return this._Nota;
			}
			set
			{
				if ((this._Nota != value))
				{
					this.OnNotaChanging(value);
					this.SendPropertyChanging();
					this._Nota = value;
					this.SendPropertyChanged("Nota");
					this.OnNotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MATERIALI_MATERIALI_IN_PREVENTIVI", Storage="_MATERIALI", ThisKey="CodMateriale", OtherKey="CodMateriale", IsForeignKey=true)]
		public MATERIALI MATERIALI
		{
			get
			{
				return this._MATERIALI.Entity;
			}
			set
			{
				MATERIALI previousValue = this._MATERIALI.Entity;
				if (((previousValue != value) 
							|| (this._MATERIALI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MATERIALI.Entity = null;
						previousValue.MATERIALI_IN_PREVENTIVI.Remove(this);
					}
					this._MATERIALI.Entity = value;
					if ((value != null))
					{
						value.MATERIALI_IN_PREVENTIVI.Add(this);
						this._CodMateriale = value.CodMateriale;
					}
					else
					{
						this._CodMateriale = default(int);
					}
					this.SendPropertyChanged("MATERIALI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PREVENTIVI_MATERIALI_IN_PREVENTIVI", Storage="_PREVENTIVI", ThisKey="CodPreventivo", OtherKey="CodPreventivo", IsForeignKey=true)]
		public PREVENTIVI PREVENTIVI
		{
			get
			{
				return this._PREVENTIVI.Entity;
			}
			set
			{
				PREVENTIVI previousValue = this._PREVENTIVI.Entity;
				if (((previousValue != value) 
							|| (this._PREVENTIVI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PREVENTIVI.Entity = null;
						previousValue.MATERIALI_IN_PREVENTIVI.Remove(this);
					}
					this._PREVENTIVI.Entity = value;
					if ((value != null))
					{
						value.MATERIALI_IN_PREVENTIVI.Add(this);
						this._CodPreventivo = value.CodPreventivo;
					}
					else
					{
						this._CodPreventivo = default(int);
					}
					this.SendPropertyChanged("PREVENTIVI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PREVENTIVI")]
	public partial class PREVENTIVI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CodPreventivo;
		
		private System.DateTime _Data;
		
		private int _CodCliente;
		
		private string _CodiceFiscale;
		
		private System.DateTime _DataInizioElettricista;
		
		private EntitySet<MATERIALI_IN_PREVENTIVI> _MATERIALI_IN_PREVENTIVI;
		
		private EntityRef<CLIENTI> _CLIENTI;
		
		private EntityRef<ELETTRICISTI_CON_RUOLI> _ELETTRICISTI_CON_RUOLI;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodPreventivoChanging(int value);
    partial void OnCodPreventivoChanged();
    partial void OnDataChanging(System.DateTime value);
    partial void OnDataChanged();
    partial void OnCodClienteChanging(int value);
    partial void OnCodClienteChanged();
    partial void OnCodiceFiscaleChanging(string value);
    partial void OnCodiceFiscaleChanged();
    partial void OnDataInizioElettricistaChanging(System.DateTime value);
    partial void OnDataInizioElettricistaChanged();
    #endregion
		
		public PREVENTIVI()
		{
			this._MATERIALI_IN_PREVENTIVI = new EntitySet<MATERIALI_IN_PREVENTIVI>(new Action<MATERIALI_IN_PREVENTIVI>(this.attach_MATERIALI_IN_PREVENTIVI), new Action<MATERIALI_IN_PREVENTIVI>(this.detach_MATERIALI_IN_PREVENTIVI));
			this._CLIENTI = default(EntityRef<CLIENTI>);
			this._ELETTRICISTI_CON_RUOLI = default(EntityRef<ELETTRICISTI_CON_RUOLI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodPreventivo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CodPreventivo
		{
			get
			{
				return this._CodPreventivo;
			}
			set
			{
				if ((this._CodPreventivo != value))
				{
					this.OnCodPreventivoChanging(value);
					this.SendPropertyChanging();
					this._CodPreventivo = value;
					this.SendPropertyChanged("CodPreventivo");
					this.OnCodPreventivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="Date NOT NULL")]
		public System.DateTime Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodCliente", DbType="Int NOT NULL")]
		public int CodCliente
		{
			get
			{
				return this._CodCliente;
			}
			set
			{
				if ((this._CodCliente != value))
				{
					if (this._CLIENTI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodClienteChanging(value);
					this.SendPropertyChanging();
					this._CodCliente = value;
					this.SendPropertyChanged("CodCliente");
					this.OnCodClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceFiscale", DbType="NChar(16) NOT NULL", CanBeNull=false)]
		public string CodiceFiscale
		{
			get
			{
				return this._CodiceFiscale;
			}
			set
			{
				if ((this._CodiceFiscale != value))
				{
					if (this._ELETTRICISTI_CON_RUOLI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodiceFiscaleChanging(value);
					this.SendPropertyChanging();
					this._CodiceFiscale = value;
					this.SendPropertyChanged("CodiceFiscale");
					this.OnCodiceFiscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataInizioElettricista", DbType="Date NOT NULL")]
		public System.DateTime DataInizioElettricista
		{
			get
			{
				return this._DataInizioElettricista;
			}
			set
			{
				if ((this._DataInizioElettricista != value))
				{
					if (this._ELETTRICISTI_CON_RUOLI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDataInizioElettricistaChanging(value);
					this.SendPropertyChanging();
					this._DataInizioElettricista = value;
					this.SendPropertyChanged("DataInizioElettricista");
					this.OnDataInizioElettricistaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PREVENTIVI_MATERIALI_IN_PREVENTIVI", Storage="_MATERIALI_IN_PREVENTIVI", ThisKey="CodPreventivo", OtherKey="CodPreventivo")]
		public EntitySet<MATERIALI_IN_PREVENTIVI> MATERIALI_IN_PREVENTIVI
		{
			get
			{
				return this._MATERIALI_IN_PREVENTIVI;
			}
			set
			{
				this._MATERIALI_IN_PREVENTIVI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENTI_PREVENTIVI", Storage="_CLIENTI", ThisKey="CodCliente", OtherKey="CodCliente", IsForeignKey=true)]
		public CLIENTI CLIENTI
		{
			get
			{
				return this._CLIENTI.Entity;
			}
			set
			{
				CLIENTI previousValue = this._CLIENTI.Entity;
				if (((previousValue != value) 
							|| (this._CLIENTI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CLIENTI.Entity = null;
						previousValue.PREVENTIVI.Remove(this);
					}
					this._CLIENTI.Entity = value;
					if ((value != null))
					{
						value.PREVENTIVI.Add(this);
						this._CodCliente = value.CodCliente;
					}
					else
					{
						this._CodCliente = default(int);
					}
					this.SendPropertyChanged("CLIENTI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ELETTRICISTI_CON_RUOLI_PREVENTIVI", Storage="_ELETTRICISTI_CON_RUOLI", ThisKey="DataInizioElettricista,CodiceFiscale", OtherKey="DataInizio,CodiceFiscale", IsForeignKey=true)]
		public ELETTRICISTI_CON_RUOLI ELETTRICISTI_CON_RUOLI
		{
			get
			{
				return this._ELETTRICISTI_CON_RUOLI.Entity;
			}
			set
			{
				ELETTRICISTI_CON_RUOLI previousValue = this._ELETTRICISTI_CON_RUOLI.Entity;
				if (((previousValue != value) 
							|| (this._ELETTRICISTI_CON_RUOLI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ELETTRICISTI_CON_RUOLI.Entity = null;
						previousValue.PREVENTIVI.Remove(this);
					}
					this._ELETTRICISTI_CON_RUOLI.Entity = value;
					if ((value != null))
					{
						value.PREVENTIVI.Add(this);
						this._DataInizioElettricista = value.DataInizio;
						this._CodiceFiscale = value.CodiceFiscale;
					}
					else
					{
						this._DataInizioElettricista = default(System.DateTime);
						this._CodiceFiscale = default(string);
					}
					this.SendPropertyChanged("ELETTRICISTI_CON_RUOLI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MATERIALI_IN_PREVENTIVI(MATERIALI_IN_PREVENTIVI entity)
		{
			this.SendPropertyChanging();
			entity.PREVENTIVI = this;
		}
		
		private void detach_MATERIALI_IN_PREVENTIVI(MATERIALI_IN_PREVENTIVI entity)
		{
			this.SendPropertyChanging();
			entity.PREVENTIVI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RUOLI")]
	public partial class RUOLI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CodRuolo;
		
		private string _Descrizione;
		
		private EntitySet<ELETTRICISTI_CON_RUOLI> _ELETTRICISTI_CON_RUOLI;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodRuoloChanging(int value);
    partial void OnCodRuoloChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    #endregion
		
		public RUOLI()
		{
			this._ELETTRICISTI_CON_RUOLI = new EntitySet<ELETTRICISTI_CON_RUOLI>(new Action<ELETTRICISTI_CON_RUOLI>(this.attach_ELETTRICISTI_CON_RUOLI), new Action<ELETTRICISTI_CON_RUOLI>(this.detach_ELETTRICISTI_CON_RUOLI));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodRuolo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CodRuolo
		{
			get
			{
				return this._CodRuolo;
			}
			set
			{
				if ((this._CodRuolo != value))
				{
					this.OnCodRuoloChanging(value);
					this.SendPropertyChanging();
					this._CodRuolo = value;
					this.SendPropertyChanged("CodRuolo");
					this.OnCodRuoloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RUOLI_ELETTRICISTI_CON_RUOLI", Storage="_ELETTRICISTI_CON_RUOLI", ThisKey="CodRuolo", OtherKey="CodRuolo")]
		public EntitySet<ELETTRICISTI_CON_RUOLI> ELETTRICISTI_CON_RUOLI
		{
			get
			{
				return this._ELETTRICISTI_CON_RUOLI;
			}
			set
			{
				this._ELETTRICISTI_CON_RUOLI.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ELETTRICISTI_CON_RUOLI(ELETTRICISTI_CON_RUOLI entity)
		{
			this.SendPropertyChanging();
			entity.RUOLI = this;
		}
		
		private void detach_ELETTRICISTI_CON_RUOLI(ELETTRICISTI_CON_RUOLI entity)
		{
			this.SendPropertyChanging();
			entity.RUOLI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TIPOLOGIE")]
	public partial class TIPOLOGIE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CodTipologia;
		
		private string _Nome;
		
		private string _Descrizione;
		
		private int _NumeroLavori;
		
		private EntitySet<LAVORI> _LAVORI;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodTipologiaChanging(int value);
    partial void OnCodTipologiaChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    partial void OnNumeroLavoriChanging(int value);
    partial void OnNumeroLavoriChanged();
    #endregion
		
		public TIPOLOGIE()
		{
			this._LAVORI = new EntitySet<LAVORI>(new Action<LAVORI>(this.attach_LAVORI), new Action<LAVORI>(this.detach_LAVORI));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodTipologia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CodTipologia
		{
			get
			{
				return this._CodTipologia;
			}
			set
			{
				if ((this._CodTipologia != value))
				{
					this.OnCodTipologiaChanging(value);
					this.SendPropertyChanging();
					this._CodTipologia = value;
					this.SendPropertyChanged("CodTipologia");
					this.OnCodTipologiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroLavori", DbType="Int NOT NULL")]
		public int NumeroLavori
		{
			get
			{
				return this._NumeroLavori;
			}
			set
			{
				if ((this._NumeroLavori != value))
				{
					this.OnNumeroLavoriChanging(value);
					this.SendPropertyChanging();
					this._NumeroLavori = value;
					this.SendPropertyChanged("NumeroLavori");
					this.OnNumeroLavoriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPOLOGIE_LAVORI", Storage="_LAVORI", ThisKey="CodTipologia", OtherKey="CodTipologia")]
		public EntitySet<LAVORI> LAVORI
		{
			get
			{
				return this._LAVORI;
			}
			set
			{
				this._LAVORI.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LAVORI(LAVORI entity)
		{
			this.SendPropertyChanging();
			entity.TIPOLOGIE = this;
		}
		
		private void detach_LAVORI(LAVORI entity)
		{
			this.SendPropertyChanging();
			entity.TIPOLOGIE = null;
		}
	}
}
#pragma warning restore 1591
